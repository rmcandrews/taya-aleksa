{"version":3,"sources":["pages/Contact/components/ContactForm/ContactForm.module.css","pages/Contact/components/ContactForm/ContactForm.jsx","pages/Contact/Contact.jsx","pages/Contact/Contact.module.css"],"names":["module","exports","FormInput","type","name","label","required","pattern","errors","touched","className","styles","wrapInput","validateInput","labelInput","htmlFor","input","focusInput","validationError","FormTextArea","placeholder","component","SelectField","options","field","form","customStyle","control","base","border","boxShadow","outline","fontFamily","fontWeight","openMenuOnFocus","select","isSearchable","value","find","option","onChange","setFieldValue","onBlur","components","IndicatorSeparator","theme","borderRadius","colors","text","primary25","primary","FormSelectField","Contact","initialValues","email","phoneNumber","budget","projectType","zipCode","message","validate","values","test","onSubmit","a","setSubmitting","fetch","method","headers","body","JSON","stringify","response","json","status","Error","console","error","isSubmitting","submitCount","containerContact","wrapContact","contactFormTitle","contactForm","noValidate","containerContactFormButton","wrapContactFormButton","contactFormButton","disabled","container","ContactForm","style","paddingTop","paddingBottom","fontSize","href","textDecoration"],"mappings":"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","file":"static/js/7.31928040.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"validationError\":\"ContactForm_validationError__xPegF\",\"submitButton\":\"ContactForm_submitButton__BzXH-\",\"containerContact\":\"ContactForm_containerContact__1Uq45\",\"wrapContact\":\"ContactForm_wrapContact__59I_x\",\"contactForm\":\"ContactForm_contactForm__1Nlv1\",\"contactFormTitle\":\"ContactForm_contactFormTitle__2pNvk\",\"wrapInput\":\"ContactForm_wrapInput__3bTL7\",\"labelInput\":\"ContactForm_labelInput__2lb_O\",\"input\":\"ContactForm_input__3McRf\",\"focusInput\":\"ContactForm_focusInput__1hzXB\",\"select\":\"ContactForm_select__1G9fp\",\"hasVal\":\"ContactForm_hasVal__1pnqx\",\"containerContactFormButton\":\"ContactForm_containerContactFormButton__Rutn_\",\"wrapContactFormButton\":\"ContactForm_wrapContactFormButton__zNLpz\",\"contactFormButton\":\"ContactForm_contactFormButton__3L3n9\",\"contactForm-bgbtn\":\"ContactForm_contactForm-bgbtn__23D1D\",\"validateInput\":\"ContactForm_validateInput__1Ioa2\",\"alertValidate\":\"ContactForm_alertValidate__xU0dk\"};","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport Select from \"react-select\";\nimport styles from \"./ContactForm.module.css\";\n\nconst FormInput = ({\n  type,\n  name,\n  label,\n  required,\n  pattern,\n  errors,\n  touched\n}) => {\n  return (\n    <>\n      <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n        <label className={styles.labelInput} htmlFor={name}>\n          {label}\n          {required ? \" *\" : \"\"}\n        </label>\n        <Field\n          className={styles.input}\n          type={type}\n          name={name}\n          pattern={pattern}\n        />\n        <span className={styles.focusInput} />\n      </div>\n      {errors && errors[name] && touched[name] ? (\n        <div className={styles.validationError}>{errors[name]}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst FormTextArea = ({ type, name, label, required, placeholder }) => {\n  return (\n    <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n      <label className={styles.labelInput} htmlFor={name}>\n        {label}\n        {required ? \" *\" : \"\"}\n      </label>\n      <Field\n        className={styles.input}\n        type={type}\n        name={name}\n        component=\"textarea\"\n        placeholder={placeholder}\n      />\n      <span className={styles.focusInput} />\n    </div>\n  );\n};\n\nconst SelectField = ({ options, field, form }) => {\n  const customStyle = {\n    control: base => ({\n      ...base,\n      border: \"0 !important\",\n      boxShadow: \"0 !important\",\n      \"&:hover\": {\n        border: \"0 !important\"\n      },\n      outline: \"none\",\n      fontFamily: \"inherit\",\n      fontWeight: 400\n    })\n  };\n  return (\n    <Select\n      openMenuOnFocus={true}\n      className={styles.select}\n      isSearchable={false}\n      options={options}\n      name={field.name}\n      value={\n        options ? options.find(option => option.value === field.value) : \"\"\n      }\n      onChange={option => form.setFieldValue(field.name, option.value)}\n      onBlur={field.onBlur}\n      styles={customStyle}\n      components={{\n        IndicatorSeparator: () => null\n      }}\n      theme={theme => ({\n        ...theme,\n        borderRadius: 0,\n        colors: {\n          ...theme.colors,\n          text: \"black\",\n          primary25: \"#eee\",\n          primary: \"black\"\n        }\n      })}\n    />\n  );\n};\n\nconst FormSelectField = ({\n  type,\n  name,\n  label,\n  required,\n  options,\n  errors,\n  touched\n}) => {\n  return (\n    <>\n      <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n        <label className={styles.labelInput} htmlFor={name}>\n          {label}\n          {required ? \" *\" : \"\"}\n        </label>\n        <Field\n          type={type}\n          name={name}\n          component={SelectField}\n          options={options}\n        />\n        <span className={styles.focusInput} />\n      </div>\n      {errors && errors[name] && touched[name] ? (\n        <div className={styles.validationError}>{errors[name]}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst Contact = () => {\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        budget: \"\",\n        projectType: \"\",\n        zipCode: \"\",\n        message: \"\"\n      }}\n      validate={values => {\n        const errors = {};\n        if (!values.name) {\n          errors.name = \"Required\";\n        }\n        if (!values.phoneNumber) {\n          errors.phoneNumber = \"Required\";\n        }\n        if (!values.zipCode) {\n          errors.zipCode = \"Required\";\n        }\n        if (!values.budget) {\n          errors.budget = \"Required\";\n        }\n        if (!values.projectType) {\n          errors.projectType = \"Required\";\n        }\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      }}\n      onSubmit={async (values, { setSubmitting }) => {\n        try {\n          const response = await fetch(\n            \"https://soxig0htxb.execute-api.us-east-1.amazonaws.com/contactFormMessage\",\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(values)\n            }\n          );\n          const body = await response.json();\n          if (body.status !== \"Success\") throw Error(\"Send Failed\");\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ isSubmitting, errors, touched, submitCount }) => (\n        <div className={styles.containerContact}>\n          <div className={styles.wrapContact}>\n            <div className={styles.contactFormTitle}>\n              Fill out the this form to inquire about a new project\n            </div>\n            <Form className={styles.contactForm} noValidate>\n              <FormInput\n                type=\"text\"\n                name=\"name\"\n                label=\"Name\"\n                errors={errors}\n                touched={touched}\n                required\n              />\n              <FormInput\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                errors={errors}\n                touched={touched}\n                required\n              />\n              <FormInput\n                type=\"tel\"\n                name=\"phoneNumber\"\n                label=\"Phone Number\"\n                errors={errors}\n                touched={touched}\n                required\n              />\n              <FormInput\n                type=\"text\"\n                name=\"zipCode\"\n                label=\"Zip Code\"\n                pattern=\"[0-9]*\"\n                errors={errors}\n                touched={touched}\n                required\n              />\n              <FormSelectField\n                name=\"budget\"\n                label=\"Budget\"\n                required\n                options={[\n                  { value: \"$10,000-$20,000\", label: \"$10,000-$20,000\" },\n                  { value: \"$20,000-$35,000\", label: \"$20,000-$35,000\" },\n                  { value: \"$35,000-$50,000\", label: \"$35,000-$50,000\" },\n                  { value: \"$50,000-$70,000\", label: \"$50,000-$70,000\" },\n                  { value: \"$70,000-$100,000\", label: \"$70,000-$100,000\" },\n                  { value: \"$100,000+\", label: \"$100,000+\" }\n                ]}\n                errors={errors}\n                touched={touched}\n              />\n              <FormSelectField\n                name=\"projectType\"\n                label=\"Project Type\"\n                required\n                options={[\n                  { value: \"Single Family\", label: \"Single Family\" },\n                  { value: \"Condo\", label: \"Condo\" }\n                ]}\n                errors={errors}\n                touched={touched}\n              />\n              <FormTextArea\n                type=\"text\"\n                name=\"message\"\n                label=\"Message\"\n                placeholder=\"Tell us a bit about the project\"\n              />\n              <div className={styles.containerContactFormButton}>\n                <div className={styles.wrapContactFormButton}>\n                  <button\n                    className={styles.contactFormButton}\n                    disabled={isSubmitting}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport styles from \"./Contact.module.css\";\nimport ContactForm from \"./components/ContactForm\";\n\nconst Contact = () => {\n  return (\n    <div className={styles.container}>\n      <ContactForm />\n      <div\n        style={{\n          paddingTop: \"3rem\",\n          paddingBottom: \"1rem\",\n          fontSize: \"1.5rem\"\n        }}\n      >\n        OR\n      </div>\n      <div>\n        email us at{\" \"}\n        <a\n          href=\"mailto: taya.aleksa@gmail.com\"\n          style={{ textDecoration: \"underline\" }}\n        >\n          taya.aleksa@gmail.com\n        </a>{\" \"}\n        for anything else\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__1tx2y\",\"list\":\"Contact_list__2GdC8\",\"socialsList\":\"Contact_socialsList__7kYSA\"};"],"sourceRoot":""}