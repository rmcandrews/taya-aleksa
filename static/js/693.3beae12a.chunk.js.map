{"version":3,"file":"static/js/693.3beae12a.chunk.js","mappings":"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","sources":["webpack://website/./src/pages/Contact/Contact.module.css?9925","webpack://website/./src/pages/Contact/components/ContactForm/ContactForm.module.css?326f","pages/Contact/components/ContactForm/ContactForm.jsx","pages/Contact/Contact.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contact_container__RHnRs\",\"list\":\"Contact_list__jHUpD\",\"socialsList\":\"Contact_socialsList__lpwnc\",\"or\":\"Contact_or__3g6uB\",\"emailUs\":\"Contact_emailUs__AULBt\"};","// extracted by mini-css-extract-plugin\nexport default {\"loadingIcon\":\"ContactForm_loadingIcon__Pd1wl\",\"loadingIconAnimation\":\"ContactForm_loadingIconAnimation__7L3Ny\",\"validationError\":\"ContactForm_validationError__I3bbw\",\"submitButton\":\"ContactForm_submitButton__jbW-w\",\"containerContact\":\"ContactForm_containerContact__3+QfB\",\"wrapContact\":\"ContactForm_wrapContact__6J+GL\",\"contactForm\":\"ContactForm_contactForm__XYQ0O\",\"contactFormTitle\":\"ContactForm_contactFormTitle__9qnhD\",\"wrapInput\":\"ContactForm_wrapInput__uCaVF\",\"labelInput\":\"ContactForm_labelInput__9us+7\",\"input\":\"ContactForm_input__aY-hD\",\"focusInput\":\"ContactForm_focusInput__LeBFe\",\"select\":\"ContactForm_select__2DllC\",\"hasVal\":\"ContactForm_hasVal__BWf9n\",\"containerContactFormButton\":\"ContactForm_containerContactFormButton__HHAGu\",\"wrapContactFormButton\":\"ContactForm_wrapContactFormButton__Ky2ci\",\"contactFormButton\":\"ContactForm_contactFormButton__tF94Z\",\"contactForm-bgbtn\":\"ContactForm_contactForm-bgbtn__DZrK-\",\"validateInput\":\"ContactForm_validateInput__NdcYk\",\"alertValidate\":\"ContactForm_alertValidate__A-78H\"};","import React, { useState } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport Select from \"react-select\";\nimport styles from \"./ContactForm.module.css\";\n\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\n\nconst FormInput = ({\n  disabled,\n  type,\n  name,\n  label,\n  required,\n  pattern,\n  errors,\n  touched,\n  minLength,\n  maxLength\n}) => {\n  return (\n    <>\n      <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n        <label className={styles.labelInput} htmlFor={name}>\n          {label}\n          {required ? \" *\" : \"\"}\n        </label>\n        <Field\n          className={styles.input}\n          type={type}\n          name={name}\n          pattern={pattern}\n          maxLength={maxLength || \"10000000\"}\n          minLength={minLength || \"0\"}\n          disabled={disabled}\n        />\n        <span className={styles.focusInput} />\n      </div>\n      {errors && errors[name] && touched[name] ? (\n        <div className={styles.validationError}>{errors[name]}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst FormTextArea = ({\n  type,\n  name,\n  label,\n  required,\n  placeholder,\n  disabled\n}) => {\n  return (\n    <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n      <label className={styles.labelInput} htmlFor={name}>\n        {label}\n        {required ? \" *\" : \"\"}\n      </label>\n      <Field\n        className={styles.input}\n        type={type}\n        name={name}\n        component=\"textarea\"\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n      <span className={styles.focusInput} />\n    </div>\n  );\n};\n\nconst SelectField = ({ options, field, form, disabled }) => {\n  const customStyle = {\n    control: base => ({\n      ...base,\n      border: \"0 !important\",\n      boxShadow: \"0 !important\",\n      \"&:hover\": {\n        border: \"0 !important\"\n      },\n      outline: \"none\",\n      fontFamily: \"inherit\",\n      fontWeight: 400\n    })\n  };\n  return (\n    <Select\n      openMenuOnFocus={true}\n      className={styles.select}\n      isSearchable={false}\n      options={options}\n      name={field.name}\n      value={\n        options ? options.find(option => option.value === field.value) : \"\"\n      }\n      onChange={option => form.setFieldValue(field.name, option.value)}\n      onBlur={field.onBlur}\n      styles={customStyle}\n      components={{\n        IndicatorSeparator: () => null\n      }}\n      theme={theme => ({\n        ...theme,\n        borderRadius: 0,\n        colors: {\n          ...theme.colors,\n          text: \"black\",\n          primary25: \"#eee\",\n          primary: \"black\"\n        }\n      })}\n      isDisabled={disabled}\n    />\n  );\n};\n\nconst FormSelectField = ({\n  type,\n  name,\n  label,\n  required,\n  options,\n  errors,\n  touched,\n  disabled\n}) => {\n  return (\n    <>\n      <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n        <label className={styles.labelInput} htmlFor={name}>\n          {label}\n          {required ? \" *\" : \"\"}\n        </label>\n        <Field\n          type={type}\n          name={name}\n          component={SelectField}\n          options={options}\n          disabled={disabled}\n        />\n        <span className={styles.focusInput} />\n      </div>\n      {errors && errors[name] && touched[name] ? (\n        <div className={styles.validationError}>{errors[name]}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst Contact = () => {\n  const [hasSucceeded, setHasSucceeded] = useState(false);\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        budget: \"\",\n        projectType: \"\",\n        zipCode: \"\",\n        message: \"\"\n      }}\n      validate={values => {\n        const errors = {};\n        if (!values.name) {\n          errors.name = \"Required\";\n        }\n        if (!values.phoneNumber) {\n          errors.phoneNumber = \"Required\";\n        }\n        if (!values.zipCode) {\n          errors.zipCode = \"Required\";\n        }\n        if (!values.budget) {\n          errors.budget = \"Required\";\n        }\n        if (!values.projectType) {\n          errors.projectType = \"Required\";\n        }\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      }}\n      onSubmit={async (values, { setSubmitting }) => {\n        await sleep(1000);\n        try {\n          const response = await fetch(\n            \"https://soxig0htxb.execute-api.us-east-1.amazonaws.com/contactFormMessage\",\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(values)\n            }\n          );\n          const body = await response.json();\n          if (body.status !== \"Success\") throw Error(\"Send Failed\");\n          setHasSucceeded(true);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ isSubmitting, errors, touched }) => (\n        <div className={styles.containerContact}>\n          <div className={styles.wrapContact}>\n            <div className={styles.contactFormTitle}>\n              Fill out the this form to inquire about a new project\n            </div>\n            <Form className={styles.contactForm} noValidate>\n              <FormInput\n                type=\"text\"\n                name=\"name\"\n                label=\"Name\"\n                errors={errors}\n                touched={touched}\n                required\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormInput\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                errors={errors}\n                touched={touched}\n                required\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormInput\n                type=\"tel\"\n                name=\"phoneNumber\"\n                label=\"Phone Number\"\n                minLength=\"10\"\n                maxLength=\"11\"\n                errors={errors}\n                touched={touched}\n                required\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormInput\n                type=\"text\"\n                name=\"zipCode\"\n                label=\"Zip Code\"\n                pattern=\"[0-9]*\"\n                maxLength=\"5\"\n                errors={errors}\n                touched={touched}\n                required\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormSelectField\n                name=\"budget\"\n                label=\"Budget\"\n                required\n                options={[\n                  { value: \"$10,000-$20,000\", label: \"$10,000-$20,000\" },\n                  { value: \"$20,000-$35,000\", label: \"$20,000-$35,000\" },\n                  { value: \"$35,000-$50,000\", label: \"$35,000-$50,000\" },\n                  { value: \"$50,000-$70,000\", label: \"$50,000-$70,000\" },\n                  { value: \"$70,000-$100,000\", label: \"$70,000-$100,000\" },\n                  { value: \"$100,000+\", label: \"$100,000+\" }\n                ]}\n                errors={errors}\n                touched={touched}\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormSelectField\n                name=\"projectType\"\n                label=\"Project Type\"\n                required\n                options={[\n                  { value: \"Single Family\", label: \"Single Family\" },\n                  { value: \"Condo\", label: \"Condo\" }\n                ]}\n                errors={errors}\n                touched={touched}\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormTextArea\n                type=\"text\"\n                name=\"message\"\n                label=\"Message\"\n                placeholder=\"Tell us a bit about the project\"\n                disabled={hasSucceeded || isSubmitting}\n              />\n              {!hasSucceeded ? (\n                <div className={styles.containerContactFormButton}>\n                  <div className={styles.wrapContactFormButton}>\n                    <button\n                      className={styles.contactFormButton}\n                      disabled={isSubmitting}\n                      style={{ color: isSubmitting ? \"red\" : \"white\" }}\n                    >\n                      {isSubmitting ? (\n                        <div className={styles.loadingIcon}>\n                          <div></div>\n                          <div></div>\n                          <div></div>\n                        </div>\n                      ) : (\n                        \"Submit\"\n                      )}\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div\n                  style={{\n                    fontSize: \"1.25rem\",\n                    textAlign: \"center\",\n                    lineHeight: 1.2\n                  }}\n                >\n                  Your information has been submitted.<br></br>We will get back\n                  to you soon!\n                </div>\n              )}\n            </Form>\n          </div>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport styles from \"./Contact.module.css\";\nimport ContactForm from \"./components/ContactForm\";\n\nconst Contact = () => {\n  return (\n    <div className={styles.container}>\n      <ContactForm />\n      <div className={styles.or}>OR</div>\n      <div className={styles.emailUs}>\n        email us at{\" \"}\n        <a\n          href=\"mailto: taya.aleksa@gmail.com\"\n          style={{ textDecoration: \"underline\" }}\n        >\n          taya.aleksa@gmail.com\n        </a>{\" \"}\n        for anything else\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n"],"names":["FormInput","_ref","disabled","type","name","label","required","pattern","errors","touched","minLength","maxLength","_jsxs","_Fragment","children","className","concat","styles","htmlFor","_jsx","Field","FormTextArea","_ref2","placeholder","component","SelectField","_ref3","options","field","form","Select","openMenuOnFocus","isSearchable","value","find","option","onChange","setFieldValue","onBlur","control","base","border","boxShadow","outline","fontFamily","fontWeight","components","IndicatorSeparator","theme","borderRadius","colors","text","primary25","primary","isDisabled","FormSelectField","_ref4","Contact","hasSucceeded","setHasSucceeded","useState","Formik","initialValues","email","phoneNumber","budget","projectType","zipCode","message","validate","values","test","onSubmit","async","_ref5","setSubmitting","ms","Promise","r","setTimeout","response","fetch","method","headers","body","JSON","stringify","json","status","Error","error","console","_ref6","isSubmitting","Form","noValidate","style","fontSize","textAlign","lineHeight","color","ContactForm","href","textDecoration"],"sourceRoot":""}