{"version":3,"sources":["pages/Contact/Contact.module.css","pages/Contact/components/ContactForm/ContactForm.module.css","pages/Contact/components/ContactForm/ContactForm.jsx","pages/Contact/Contact.jsx"],"names":["module","exports","FormInput","type","name","label","required","className","styles","wrapInput","validateInput","class","labelInput","htmlFor","input","focusInput","FormTextArea","placeholder","component","SelectField","options","field","form","customStyle","control","base","state","border","boxShadow","outline","value","find","option","onChange","setFieldValue","onBlur","components","IndicatorSeparator","theme","borderRadius","colors","text","primary25","primary","FormSelectField","Contact","initialValues","email","password","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","containerContact","wrapContact","contactForm","validateForm","containerContactFormButton","wrapContactFormButton","contactFormButton","container","ContactForm"],"mappings":"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","file":"static/js/7.3fb9f1e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__1tx2y\",\"list\":\"Contact_list__2GdC8\",\"socialsList\":\"Contact_socialsList__7kYSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitButton\":\"ContactForm_submitButton__BzXH-\",\"containerContact\":\"ContactForm_containerContact__1Uq45\",\"wrapContact\":\"ContactForm_wrapContact__59I_x\",\"contactForm\":\"ContactForm_contactForm__1Nlv1\",\"contactFormTitle\":\"ContactForm_contactFormTitle__2pNvk\",\"wrapInput\":\"ContactForm_wrapInput__3bTL7\",\"labelInput\":\"ContactForm_labelInput__2lb_O\",\"input\":\"ContactForm_input__3McRf\",\"focusInput\":\"ContactForm_focusInput__1hzXB\",\"hasVal\":\"ContactForm_hasVal__1pnqx\",\"containerContactFormButton\":\"ContactForm_containerContactFormButton__Rutn_\",\"wrapContactFormButton\":\"ContactForm_wrapContactFormButton__zNLpz\",\"contactFormButton\":\"ContactForm_contactFormButton__3L3n9\",\"contactForm-bgbtn\":\"ContactForm_contactForm-bgbtn__23D1D\",\"validateInput\":\"ContactForm_validateInput__1Ioa2\",\"alertValidate\":\"ContactForm_alertValidate__xU0dk\"};","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport Select from \"react-select\";\nimport styles from \"./ContactForm.module.css\";\n\nconst FormInput = ({ type, name, label, required }) => {\n  return (\n    <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n      <label class={styles.labelInput} htmlFor={name}>\n        {label}\n        {required ? \" *\" : \"\"}\n      </label>\n      <Field className={styles.input} type={type} name={name} />\n      <span className={styles.focusInput} />\n    </div>\n  );\n};\n\nconst FormTextArea = ({ type, name, label, required, placeholder }) => {\n  return (\n    <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n      <label class={styles.labelInput} htmlFor={name}>\n        {label}\n        {required ? \" *\" : \"\"}\n      </label>\n      <Field\n        className={styles.input}\n        type={type}\n        name={name}\n        component=\"textarea\"\n        placeholder={placeholder}\n      />\n      <span className={styles.focusInput} />\n    </div>\n  );\n};\n\nconst SelectField = ({ options, field, form }) => {\n  const customStyle = {\n    control: (base, state) => ({\n      ...base,\n      border: \"0 !important\",\n      boxShadow: \"0 !important\",\n      \"&:hover\": {\n        border: \"0 !important\"\n      },\n      outline: \"none\"\n    })\n  };\n  return (\n    <Select\n      options={options}\n      name={field.name}\n      value={\n        options ? options.find(option => option.value === field.value) : \"\"\n      }\n      onChange={option => form.setFieldValue(field.name, option.value)}\n      onBlur={field.onBlur}\n      styles={customStyle}\n      components={{\n        IndicatorSeparator: () => null\n      }}\n      theme={theme => ({\n        ...theme,\n        borderRadius: 0,\n        colors: {\n          ...theme.colors,\n          text: \"black\",\n          primary25: \"#eee\",\n          primary: \"black\"\n        }\n      })}\n    />\n  );\n};\n\nconst FormSelectField = ({ type, name, label, required, options }) => {\n  return (\n    <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n      <label class={styles.labelInput} htmlFor={name}>\n        {label}\n        {required ? \" *\" : \"\"}\n      </label>\n      <Field\n        className={styles.input}\n        type={type}\n        name={name}\n        component={SelectField}\n        options={options}\n      />\n      <span className={styles.focusInput} />\n    </div>\n  );\n};\n\nconst Contact = () => {\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <div className={styles.containerContact}>\n          <div className={styles.wrapContact}>\n            {/* <span className={styles.contactFormTitle}>Say Hello!</span> */}\n            <Form className={`${styles.contactForm} ${styles.validateForm}`}>\n              <FormInput type=\"text\" name=\"name\" label=\"Name\" required />\n              <FormInput type=\"email\" name=\"email\" label=\"Email\" required />\n              <FormInput\n                type=\"text\"\n                name=\"phoneNumber\"\n                label=\"Phone Number\"\n                required\n              />\n              <FormInput type=\"text\" name=\"zipCode\" label=\"Zip Code\" required />\n              <FormSelectField\n                name=\"budget\"\n                label=\"Budget\"\n                required\n                options={[\n                  { value: \"$10,000-$20,000\", label: \"$10,000-$20,000\" },\n                  { value: \"$20,000-$35,000\", label: \"$20,000-$35,000\" },\n                  { value: \"$35,000-$50,000\", label: \"$35,000-$50,000\" },\n                  { value: \"$50,000-$70,000\", label: \"$50,000-$70,000\" },\n                  { value: \"$70,000-$100,000\", label: \"$70,000-$100,000\" },\n                  { value: \"$100,000+\", label: \"$100,000+\" }\n                ]}\n              />\n              <FormSelectField\n                name=\"projectType\"\n                label=\"Project Type\"\n                required\n                options={[\n                  { value: \"Single Family\", label: \"Single Family\" },\n                  { value: \"Condo\", label: \"Condo\" }\n                ]}\n              />\n              <FormTextArea\n                type=\"text\"\n                name=\"messageText\"\n                label=\"Message\"\n                placeholder=\"Tell us a bit about the project\"\n              />\n              <div className={styles.containerContactFormButton}>\n                <div className={styles.wrapContactFormButton}>\n                  <button className={styles.contactFormButton}>Submit</button>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport styles from \"./Contact.module.css\";\nimport ContactForm from \"./components/ContactForm\";\n\nconst Contact = () => {\n  return (\n    <div className={styles.container}>\n      <ContactForm />\n      {/* <ol className={styles.list}>\n        <li>\n          <h2>EMAIL</h2>\n          <p style={{ fontSize: 20 }}>\n            <a href=\"mailto: taya.aleksa@gmail.com\">taya.aleksa@gmail.com</a>\n          </p>\n        </li>\n        <li>\n          <h2>SOCIALS</h2>\n          <div className={styles.socialsList}>\n            <a\n              href=\"https://www.instagram.com/taya.aleksa/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={instagramIcon} alt=\"instagram\" />\n            </a>\n            <a\n              href=\"https://in.pinterest.com/beasleyla/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={pinterestIcon} alt=\"pinterest\" />\n            </a>\n            <a\n              href=\"https://www.linkedin.com/in/taya-lyskanycz-b23b5a29/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={linkedInIcon} alt=\"linkedin\" />\n            </a>\n          </div>\n        </li>\n      </ol> */}\n    </div>\n  );\n};\n\nexport default Contact;\n"],"sourceRoot":""}