{"version":3,"sources":["pages/Contact/components/ContactForm/ContactForm.module.css","pages/Contact/components/ContactForm/ContactForm.jsx","pages/Contact/Contact.jsx","pages/Contact/Contact.module.css"],"names":["module","exports","sleep","ms","Promise","r","setTimeout","FormInput","disabled","type","name","label","required","pattern","errors","touched","minLength","maxLength","className","styles","wrapInput","validateInput","labelInput","htmlFor","input","focusInput","validationError","FormTextArea","placeholder","component","SelectField","options","field","form","customStyle","control","base","border","boxShadow","outline","fontFamily","fontWeight","openMenuOnFocus","select","isSearchable","value","find","option","onChange","setFieldValue","onBlur","components","IndicatorSeparator","theme","borderRadius","colors","text","primary25","primary","isDisabled","FormSelectField","Contact","useState","hasSucceeded","setHasSucceeded","initialValues","email","phoneNumber","budget","projectType","zipCode","message","validate","values","test","onSubmit","a","setSubmitting","fetch","method","headers","body","JSON","stringify","response","json","status","Error","console","error","isSubmitting","containerContact","wrapContact","contactFormTitle","contactForm","noValidate","style","fontSize","textAlign","lineHeight","containerContactFormButton","wrapContactFormButton","contactFormButton","color","loadingIcon","container","ContactForm","or","emailUs","href","textDecoration"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,qBAAuB,0CAA0C,gBAAkB,qCAAqC,aAAe,kCAAkC,iBAAmB,sCAAsC,YAAc,iCAAiC,YAAc,iCAAiC,iBAAmB,sCAAsC,UAAY,+BAA+B,WAAa,gCAAgC,MAAQ,2BAA2B,WAAa,gCAAgC,OAAS,4BAA4B,OAAS,4BAA4B,2BAA6B,gDAAgD,sBAAwB,2CAA2C,kBAAoB,uCAAuC,oBAAoB,uCAAuC,cAAgB,mCAAmC,cAAgB,qC,iMCI/+BC,EAAQ,SAAAC,GAAE,OAAI,IAAIC,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAGF,OAE7CI,EAAY,SAAC,GAWZ,IAVLC,EAUI,EAVJA,SACAC,EASI,EATJA,KACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,QACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,UACAC,EACI,EADJA,UAEA,OACE,oCACE,yBAAKC,UAAS,UAAKC,IAAOC,UAAZ,YAAyBD,IAAOE,gBAC5C,2BAAOH,UAAWC,IAAOG,WAAYC,QAASb,GAC3CC,EACAC,EAAW,KAAO,IAErB,kBAAC,IAAD,CACEM,UAAWC,IAAOK,MAClBf,KAAMA,EACNC,KAAMA,EACNG,QAASA,EACTI,UAAWA,GAAa,WACxBD,UAAWA,GAAa,IACxBR,SAAUA,IAEZ,0BAAMU,UAAWC,IAAOM,cAEzBX,GAAUA,EAAOJ,IAASK,EAAQL,GACjC,yBAAKQ,UAAWC,IAAOO,iBAAkBZ,EAAOJ,IAC9C,OAKJiB,EAAe,SAAC,GAOf,IANLlB,EAMI,EANJA,KACAC,EAKI,EALJA,KACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAgB,EAEI,EAFJA,YACApB,EACI,EADJA,SAEA,OACE,yBAAKU,UAAS,UAAKC,IAAOC,UAAZ,YAAyBD,IAAOE,gBAC5C,2BAAOH,UAAWC,IAAOG,WAAYC,QAASb,GAC3CC,EACAC,EAAW,KAAO,IAErB,kBAAC,IAAD,CACEM,UAAWC,IAAOK,MAClBf,KAAMA,EACNC,KAAMA,EACNmB,UAAU,WACVD,YAAaA,EACbpB,SAAUA,IAEZ,0BAAMU,UAAWC,IAAOM,eAKxBK,EAAc,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMzB,EAAe,EAAfA,SACrC0B,EAAc,CAClBC,QAAS,SAAAC,GAAI,kCACRA,GADQ,IAEXC,OAAQ,eACRC,UAAW,eACX,UAAW,CACTD,OAAQ,gBAEVE,QAAS,OACTC,WAAY,UACZC,WAAY,QAGhB,OACE,kBAAC,IAAD,CACEC,iBAAiB,EACjBxB,UAAWC,IAAOwB,OAClBC,cAAc,EACdb,QAASA,EACTrB,KAAMsB,EAAMtB,KACZmC,MACEd,EAAUA,EAAQe,MAAK,SAAAC,GAAM,OAAIA,EAAOF,QAAUb,EAAMa,SAAS,GAEnEG,SAAU,SAAAD,GAAM,OAAId,EAAKgB,cAAcjB,EAAMtB,KAAMqC,EAAOF,QAC1DK,OAAQlB,EAAMkB,OACd/B,OAAQe,EACRiB,WAAY,CACVC,mBAAoB,kBAAM,OAE5BC,MAAO,SAAAA,GAAK,kCACPA,GADO,IAEVC,aAAc,EACdC,OAAO,2BACFF,EAAME,QADL,IAEJC,KAAM,QACNC,UAAW,OACXC,QAAS,aAGbC,WAAYnD,KAKZoD,EAAkB,SAAC,GASlB,IARLnD,EAQI,EARJA,KACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,SACAmB,EAII,EAJJA,QACAjB,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACAP,EACI,EADJA,SAEA,OACE,oCACE,yBAAKU,UAAS,UAAKC,IAAOC,UAAZ,YAAyBD,IAAOE,gBAC5C,2BAAOH,UAAWC,IAAOG,WAAYC,QAASb,GAC3CC,EACAC,EAAW,KAAO,IAErB,kBAAC,IAAD,CACEH,KAAMA,EACNC,KAAMA,EACNmB,UAAWC,EACXC,QAASA,EACTvB,SAAUA,IAEZ,0BAAMU,UAAWC,IAAOM,cAEzBX,GAAUA,EAAOJ,IAASK,EAAQL,GACjC,yBAAKQ,UAAWC,IAAOO,iBAAkBZ,EAAOJ,IAC9C,OA6LKmD,EAxLC,WAAO,IAAD,EACoBC,oBAAS,GAD7B,mBACbC,EADa,KACCC,EADD,KAEpB,OACE,kBAAC,IAAD,CACEC,cAAe,CACbvD,KAAM,GACNwD,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,YAAa,GACbC,QAAS,GACTC,QAAS,IAEXC,SAAU,SAAAC,GACR,IAAM3D,EAAS,GAuBf,OAtBK2D,EAAO/D,OACVI,EAAOJ,KAAO,YAEX+D,EAAON,cACVrD,EAAOqD,YAAc,YAElBM,EAAOH,UACVxD,EAAOwD,QAAU,YAEdG,EAAOL,SACVtD,EAAOsD,OAAS,YAEbK,EAAOJ,cACVvD,EAAOuD,YAAc,YAElBI,EAAOP,MAGT,2CAA2CQ,KAAKD,EAAOP,SAExDpD,EAAOoD,MAAQ,yBAJfpD,EAAOoD,MAAQ,WAMVpD,GAET6D,SAAQ,uCAAE,WAAOF,EAAP,oBAAAG,EAAA,6DAAiBC,EAAjB,EAAiBA,cAAjB,SACF3E,EAAM,KADJ,gCAGiB4E,MACrB,4EACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUV,KAVnB,cAGAW,EAHA,gBAaaA,EAASC,OAbtB,UAcc,YAdd,OAcGC,OAdH,uBAc+BC,MAAM,eAdrC,QAeNvB,GAAgB,GAfV,kDAiBNwB,QAAQC,MAAR,MAjBM,yBAmBNZ,GAAc,GAnBR,6EAAF,0DAuBP,gBAAGa,EAAH,EAAGA,aAAc5E,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,yBAAKG,UAAWC,IAAOwE,kBACrB,yBAAKzE,UAAWC,IAAOyE,aACrB,yBAAK1E,UAAWC,IAAO0E,kBAAvB,yDAGA,kBAAC,IAAD,CAAM3E,UAAWC,IAAO2E,YAAaC,YAAU,GAC7C,kBAAC,EAAD,CACEtF,KAAK,OACLC,KAAK,OACLC,MAAM,OACNG,OAAQA,EACRC,QAASA,EACTH,UAAQ,EACRJ,SAAUuD,GAAgB2B,IAE5B,kBAAC,EAAD,CACEjF,KAAK,QACLC,KAAK,QACLC,MAAM,QACNG,OAAQA,EACRC,QAASA,EACTH,UAAQ,EACRJ,SAAUuD,GAAgB2B,IAE5B,kBAAC,EAAD,CACEjF,KAAK,MACLC,KAAK,cACLC,MAAM,eACNK,UAAU,KACVC,UAAU,KACVH,OAAQA,EACRC,QAASA,EACTH,UAAQ,EACRJ,SAAUuD,GAAgB2B,IAE5B,kBAAC,EAAD,CACEjF,KAAK,OACLC,KAAK,UACLC,MAAM,WACNE,QAAQ,SACRI,UAAU,IACVH,OAAQA,EACRC,QAASA,EACTH,UAAQ,EACRJ,SAAUuD,GAAgB2B,IAE5B,kBAAC,EAAD,CACEhF,KAAK,SACLC,MAAM,SACNC,UAAQ,EACRmB,QAAS,CACP,CAAEc,MAAO,kBAAmBlC,MAAO,mBACnC,CAAEkC,MAAO,kBAAmBlC,MAAO,mBACnC,CAAEkC,MAAO,kBAAmBlC,MAAO,mBACnC,CAAEkC,MAAO,kBAAmBlC,MAAO,mBACnC,CAAEkC,MAAO,mBAAoBlC,MAAO,oBACpC,CAAEkC,MAAO,YAAalC,MAAO,cAE/BG,OAAQA,EACRC,QAASA,EACTP,SAAUuD,GAAgB2B,IAE5B,kBAAC,EAAD,CACEhF,KAAK,cACLC,MAAM,eACNC,UAAQ,EACRmB,QAAS,CACP,CAAEc,MAAO,gBAAiBlC,MAAO,iBACjC,CAAEkC,MAAO,QAASlC,MAAO,UAE3BG,OAAQA,EACRC,QAASA,EACTP,SAAUuD,GAAgB2B,IAE5B,kBAAC,EAAD,CACEjF,KAAK,OACLC,KAAK,UACLC,MAAM,UACNiB,YAAY,kCACZpB,SAAUuD,GAAgB2B,IAE1B3B,EAqBA,yBACEiC,MAAO,CACLC,SAAU,UACVC,UAAW,SACXC,WAAY,MAJhB,uCAOsC,6BAPtC,iCApBA,yBAAKjF,UAAWC,IAAOiF,4BACrB,yBAAKlF,UAAWC,IAAOkF,uBACrB,4BACEnF,UAAWC,IAAOmF,kBAClB9F,SAAUkF,EACVM,MAAO,CAAEO,MAAOb,EAAe,MAAQ,UAEtCA,EACC,yBAAKxE,UAAWC,IAAOqF,aACrB,8BACA,8BACA,+BAGF,mBC7RT3C,EAnBC,WACd,OACE,yBAAK3C,UAAWC,IAAOsF,WACrB,kBAACC,EAAD,MACA,yBAAKxF,UAAWC,IAAOwF,IAAvB,MACA,yBAAKzF,UAAWC,IAAOyF,SAAvB,cACc,IACZ,uBACEC,KAAK,gCACLb,MAAO,CAAEc,eAAgB,cAF3B,yBAKK,IAPP,wB,mBCRN9G,EAAOC,QAAU,CAAC,UAAY,2BAA2B,KAAO,sBAAsB,YAAc,6BAA6B,GAAK,oBAAoB,QAAU","file":"static/js/7.68669bca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingIcon\":\"ContactForm_loadingIcon__11GG1\",\"loadingIconAnimation\":\"ContactForm_loadingIconAnimation__3qbYE\",\"validationError\":\"ContactForm_validationError__xPegF\",\"submitButton\":\"ContactForm_submitButton__BzXH-\",\"containerContact\":\"ContactForm_containerContact__1Uq45\",\"wrapContact\":\"ContactForm_wrapContact__59I_x\",\"contactForm\":\"ContactForm_contactForm__1Nlv1\",\"contactFormTitle\":\"ContactForm_contactFormTitle__2pNvk\",\"wrapInput\":\"ContactForm_wrapInput__3bTL7\",\"labelInput\":\"ContactForm_labelInput__2lb_O\",\"input\":\"ContactForm_input__3McRf\",\"focusInput\":\"ContactForm_focusInput__1hzXB\",\"select\":\"ContactForm_select__1G9fp\",\"hasVal\":\"ContactForm_hasVal__1pnqx\",\"containerContactFormButton\":\"ContactForm_containerContactFormButton__Rutn_\",\"wrapContactFormButton\":\"ContactForm_wrapContactFormButton__zNLpz\",\"contactFormButton\":\"ContactForm_contactFormButton__3L3n9\",\"contactForm-bgbtn\":\"ContactForm_contactForm-bgbtn__23D1D\",\"validateInput\":\"ContactForm_validateInput__1Ioa2\",\"alertValidate\":\"ContactForm_alertValidate__xU0dk\"};","import React, { useState } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport Select from \"react-select\";\nimport styles from \"./ContactForm.module.css\";\n\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\n\nconst FormInput = ({\n  disabled,\n  type,\n  name,\n  label,\n  required,\n  pattern,\n  errors,\n  touched,\n  minLength,\n  maxLength\n}) => {\n  return (\n    <>\n      <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n        <label className={styles.labelInput} htmlFor={name}>\n          {label}\n          {required ? \" *\" : \"\"}\n        </label>\n        <Field\n          className={styles.input}\n          type={type}\n          name={name}\n          pattern={pattern}\n          maxLength={maxLength || \"10000000\"}\n          minLength={minLength || \"0\"}\n          disabled={disabled}\n        />\n        <span className={styles.focusInput} />\n      </div>\n      {errors && errors[name] && touched[name] ? (\n        <div className={styles.validationError}>{errors[name]}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst FormTextArea = ({\n  type,\n  name,\n  label,\n  required,\n  placeholder,\n  disabled\n}) => {\n  return (\n    <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n      <label className={styles.labelInput} htmlFor={name}>\n        {label}\n        {required ? \" *\" : \"\"}\n      </label>\n      <Field\n        className={styles.input}\n        type={type}\n        name={name}\n        component=\"textarea\"\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n      <span className={styles.focusInput} />\n    </div>\n  );\n};\n\nconst SelectField = ({ options, field, form, disabled }) => {\n  const customStyle = {\n    control: base => ({\n      ...base,\n      border: \"0 !important\",\n      boxShadow: \"0 !important\",\n      \"&:hover\": {\n        border: \"0 !important\"\n      },\n      outline: \"none\",\n      fontFamily: \"inherit\",\n      fontWeight: 400\n    })\n  };\n  return (\n    <Select\n      openMenuOnFocus={true}\n      className={styles.select}\n      isSearchable={false}\n      options={options}\n      name={field.name}\n      value={\n        options ? options.find(option => option.value === field.value) : \"\"\n      }\n      onChange={option => form.setFieldValue(field.name, option.value)}\n      onBlur={field.onBlur}\n      styles={customStyle}\n      components={{\n        IndicatorSeparator: () => null\n      }}\n      theme={theme => ({\n        ...theme,\n        borderRadius: 0,\n        colors: {\n          ...theme.colors,\n          text: \"black\",\n          primary25: \"#eee\",\n          primary: \"black\"\n        }\n      })}\n      isDisabled={disabled}\n    />\n  );\n};\n\nconst FormSelectField = ({\n  type,\n  name,\n  label,\n  required,\n  options,\n  errors,\n  touched,\n  disabled\n}) => {\n  return (\n    <>\n      <div className={`${styles.wrapInput} ${styles.validateInput}`}>\n        <label className={styles.labelInput} htmlFor={name}>\n          {label}\n          {required ? \" *\" : \"\"}\n        </label>\n        <Field\n          type={type}\n          name={name}\n          component={SelectField}\n          options={options}\n          disabled={disabled}\n        />\n        <span className={styles.focusInput} />\n      </div>\n      {errors && errors[name] && touched[name] ? (\n        <div className={styles.validationError}>{errors[name]}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst Contact = () => {\n  const [hasSucceeded, setHasSucceeded] = useState(false);\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        budget: \"\",\n        projectType: \"\",\n        zipCode: \"\",\n        message: \"\"\n      }}\n      validate={values => {\n        const errors = {};\n        if (!values.name) {\n          errors.name = \"Required\";\n        }\n        if (!values.phoneNumber) {\n          errors.phoneNumber = \"Required\";\n        }\n        if (!values.zipCode) {\n          errors.zipCode = \"Required\";\n        }\n        if (!values.budget) {\n          errors.budget = \"Required\";\n        }\n        if (!values.projectType) {\n          errors.projectType = \"Required\";\n        }\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      }}\n      onSubmit={async (values, { setSubmitting }) => {\n        await sleep(1000);\n        try {\n          const response = await fetch(\n            \"https://soxig0htxb.execute-api.us-east-1.amazonaws.com/contactFormMessage\",\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(values)\n            }\n          );\n          const body = await response.json();\n          if (body.status !== \"Success\") throw Error(\"Send Failed\");\n          setHasSucceeded(true);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ isSubmitting, errors, touched }) => (\n        <div className={styles.containerContact}>\n          <div className={styles.wrapContact}>\n            <div className={styles.contactFormTitle}>\n              Fill out the this form to inquire about a new project\n            </div>\n            <Form className={styles.contactForm} noValidate>\n              <FormInput\n                type=\"text\"\n                name=\"name\"\n                label=\"Name\"\n                errors={errors}\n                touched={touched}\n                required\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormInput\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                errors={errors}\n                touched={touched}\n                required\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormInput\n                type=\"tel\"\n                name=\"phoneNumber\"\n                label=\"Phone Number\"\n                minLength=\"10\"\n                maxLength=\"11\"\n                errors={errors}\n                touched={touched}\n                required\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormInput\n                type=\"text\"\n                name=\"zipCode\"\n                label=\"Zip Code\"\n                pattern=\"[0-9]*\"\n                maxLength=\"5\"\n                errors={errors}\n                touched={touched}\n                required\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormSelectField\n                name=\"budget\"\n                label=\"Budget\"\n                required\n                options={[\n                  { value: \"$10,000-$20,000\", label: \"$10,000-$20,000\" },\n                  { value: \"$20,000-$35,000\", label: \"$20,000-$35,000\" },\n                  { value: \"$35,000-$50,000\", label: \"$35,000-$50,000\" },\n                  { value: \"$50,000-$70,000\", label: \"$50,000-$70,000\" },\n                  { value: \"$70,000-$100,000\", label: \"$70,000-$100,000\" },\n                  { value: \"$100,000+\", label: \"$100,000+\" }\n                ]}\n                errors={errors}\n                touched={touched}\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormSelectField\n                name=\"projectType\"\n                label=\"Project Type\"\n                required\n                options={[\n                  { value: \"Single Family\", label: \"Single Family\" },\n                  { value: \"Condo\", label: \"Condo\" }\n                ]}\n                errors={errors}\n                touched={touched}\n                disabled={hasSucceeded || isSubmitting}\n              />\n              <FormTextArea\n                type=\"text\"\n                name=\"message\"\n                label=\"Message\"\n                placeholder=\"Tell us a bit about the project\"\n                disabled={hasSucceeded || isSubmitting}\n              />\n              {!hasSucceeded ? (\n                <div className={styles.containerContactFormButton}>\n                  <div className={styles.wrapContactFormButton}>\n                    <button\n                      className={styles.contactFormButton}\n                      disabled={isSubmitting}\n                      style={{ color: isSubmitting ? \"red\" : \"white\" }}\n                    >\n                      {isSubmitting ? (\n                        <div className={styles.loadingIcon}>\n                          <div></div>\n                          <div></div>\n                          <div></div>\n                        </div>\n                      ) : (\n                        \"Submit\"\n                      )}\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div\n                  style={{\n                    fontSize: \"1.25rem\",\n                    textAlign: \"center\",\n                    lineHeight: 1.2\n                  }}\n                >\n                  Your information has been submitted.<br></br>We will get back\n                  to you soon!\n                </div>\n              )}\n            </Form>\n          </div>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport styles from \"./Contact.module.css\";\nimport ContactForm from \"./components/ContactForm\";\n\nconst Contact = () => {\n  return (\n    <div className={styles.container}>\n      <ContactForm />\n      <div className={styles.or}>OR</div>\n      <div className={styles.emailUs}>\n        email us at{\" \"}\n        <a\n          href=\"mailto: taya.aleksa@gmail.com\"\n          style={{ textDecoration: \"underline\" }}\n        >\n          taya.aleksa@gmail.com\n        </a>{\" \"}\n        for anything else\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__1tx2y\",\"list\":\"Contact_list__2GdC8\",\"socialsList\":\"Contact_socialsList__7kYSA\",\"or\":\"Contact_or__2FGyU\",\"emailUs\":\"Contact_emailUs__3_CNA\"};"],"sourceRoot":""}